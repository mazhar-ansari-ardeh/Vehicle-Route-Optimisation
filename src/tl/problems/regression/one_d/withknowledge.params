parent.0 = ../ec/gp/koza/koza.params

# Override the number of generations
generations = 100

# Originally, this parameter was inherited from ec.simple.simple.params via ec.gp.koza.koza.params
# finish = ec.simple.SimpleFinisher
# finish = tl.FilePopSaverFinisher
# finish.final-pop-file-name = final-pop.dat

# --------------------------- Knowledge ---------------------------------------------
# Originally it was gp.tc.0.init = ec.gp.koza.HalfBuilder
gp.tc.0.init = tl.gp.FilteredFittedCodeFragmentBuilder
gp.tc.0.init.knowledge-file = final-pop.dat
gp.tc.0.init.knowledge-probability = 0.5
gp.tc.0.init.knowledge-tournament-size = 20
gp.tc.0.init.knowledge-filter-size = 100

# --------------------------- EvolutionState ----------------------------------------
# I need to find fitness of inds after initialization and this one does that!
# I will add more modifications to this if needed.
# state = tl.gp.CFCEvolutionState


# --------------------------- Functions and Nodes -----------------------------------

# We have one function set, of class GPFunctionSet
gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
# We'll call the function set "f0".
gp.fs.0.name = f0

# We have four functions in the function set. They are:

gp.fs.0.size = 5
gp.fs.0.func.0 = tl.problems.regression.Add
gp.fs.0.func.0.nc = nc2
gp.fs.0.func.1 = tl.problems.regression.Sub
gp.fs.0.func.1.nc = nc2
gp.fs.0.func.2 = tl.problems.regression.Mul
gp.fs.0.func.2.nc = nc2
gp.fs.0.func.3 = tl.problems.regression.RegERC
gp.fs.0.func.3.nc = nc0
gp.fs.0.func.4 = tl.problems.regression.X
gp.fs.0.func.4.nc = nc0

# --------------------------- Problem Definition ------------------------------------
eval.problem = tl.problems.regression.one_d.Poly1
eval.problem.data = tl.problems.regression.VectorData

eval.problem.poly1.range_min = -2
eval.problem.poly1.range_max = +2
eval.problem.poly1.number-of-tests = 100

# This is used because I need to keep track of number of evaluations in a problem and
# cloning will reset this.
eval.clone-problem = false

# --------------------------- Statistics --------------------------------------------
stat = tutorial7.gp.FCFStatistics
stat.file = $withknowledge.stat/poly1.stat
stat.gen-pop-file = withknowledge.stat/population.gen
stat.save-pop = true
stat.save-tree = true

gp.tree.print-style=c

#
