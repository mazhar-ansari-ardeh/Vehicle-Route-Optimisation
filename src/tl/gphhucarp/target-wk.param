parent.0=carp_param_base.param
print-params = false

stat.file=$./stats/target-wk/job.0.out.stat
stat.gen-pop-file=./stats/target-wk/population.gen
seed.0=3
# gp.tc.0.init=tl.gp.IqKnowledgeBuilder
# gp.tc.0.init = ec.gp.koza.HalfBuilder
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/IqKnowledgeBuilder
# gp.tc.0.init.knowledge-folder=/home/mazhar/MyPhD/SourceCodes/gpucarp/stats/origin/
# gp.tc.0.init.knowledge-file=/home/mazhar/MyPhD/SourceCodes/gpucarp/stats/origin/population.gen.49.bin
# gp.tc.0.init.knowledge-probability=0.5
# gp.tc.0.init.transfer-percent=75
# gp.tc.0.init.k=2
# gp.tc.0.init.knowledge-extraction=rootsubtree
# pop.subpop.0.species.pipe.origin.1 = tl.gp.TLGPCriptorMutation
# pop.subpop.0.species.pipe.origin.1.knowledge-log-file=./stats/target-wk/TLGPCriptorMutationLog
# pop.subpop.0.species.pipe.origin.1.knowledge-probability=0.5

# ==============================
# Terminal Weight Transfer
# ==============================
# gp.fs.0.func.0 = tl.gphhucarp.TerminalERCWeighted
# gp.fs.0.func.0.terminal-file = book.bk
# gp.fs.0.func.0.weight-use-degeneration-rate=0.8
# gp.fs.0.func.0.weight-use-probability=0.8
# gp.fs.0.func.0.weight-use-policy=all
# gp.fs.0.func.0.knowledge-log-file=./stats/target-wk/TerminalERCWeightedLog
# ==============================

# ==============================
# Terminal Weight Transfer
# ==============================
# gp.fs.0.func.0 = tl.gphhucarp.TerminalERCContribWeighted
# gp.fs.0.func.0.terminal-file = book.bk
# gp.fs.0.func.0.weight-use-degeneration-rate=0.8
# gp.fs.0.func.0.weight-use-probability=0.8
# gp.fs.0.func.0.weight-use-policy=first
# gp.fs.0.func.0.knowledge-log-file=./stats/target-wk/TerminalERCContribWeightedLog
# ==============================


# ==============================
# TerminalERCContribOnlyWeighted Transfer
# ==============================
# gp.fs.0.func.0 = tl.gphhucarp.TerminalERCContribOnlyWeighted
# gp.fs.0.func.0.terminal-file = /home/mazhar/grid/gdb1-v5-to4/1/gdb1-v5.bk
# gp.fs.0.func.0.weight-use-degeneration-rate=0.8
# gp.fs.0.func.0.weight-use-probability=0.8
# gp.fs.0.func.0.weight-use-policy=all
# gp.fs.0.func.0.knowledge-log-file=./stats/target-wk/TerminalERCContribWeightedLog
# gp.fs.0.func.0.min-weight=0.2
# gp.fs.0.func.0.max-weight=0.8
# gp.fs.0.func.0.normalize-weights=false
# ==============================


# ==============================
# ContribSubTree Builder
# ==============================
# gp.tc.0.init=tl.gp.ContribSubtreeBuilder
# gp.tc.0.init.knowledge-file=/run/media/mazhar/Elements/grid/Archive/val10D-v10-to9/1/val10D-v10-all.bk
# percentage of initial population that is created from extracted knowledge
# gp.tc.0.init.transfer-percent=0.50
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/ContribTerminalLog

# ==============================
# PPT Builder
# ==============================
# gp.tc.0.init=tl.gp.PPTBuilder
# gp.tc.0.init.knowledge-file=
# percentage of initial population that is created from extracted knowledge
# gp.tc.0.init.transfer-percent=0.50
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/PPTBuildLog

# gp.tc.0.init.knowledge-extraction=rootsubtree
# gp.tc.0.init.extract-percent=0.50
# gp.tc.0.init.min-cf-depth=2
# gp.tc.0.init.max-cf-depth=5
# ==============================

# ==============================
# MutatingSubtreeBuilder
# ==============================
# gp.tc.0.init=tl.gp.MutatingSubtreeBuilder
# gp.tc.0.init.knowledge-file=/home/mazhar/grid/gdb1.vs5:gen_50/KnowledgeSource/1/population.gen.49.bin
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/MutatingFullTreeLog
# gp.tc.0.init.transfer-percent=50
# gp.tc.0.init.knowledge-extraction=root
# gp.tc.0.init.ns.0 = ec.gp.koza.KozaNodeSelector
# gp.tc.0.init.num-mutated=2
# gp.tc.0.init.simplify=true
# gp.tc.0.init.target-percent=0.5
# gp.tc.0.init.niche-capacity=2
# gp.tc.0.init.niche-radius=0.1

# ==============================
# Frequent CodeFragment Builder
# ==============================
# gp.tc.0.init=tl.gp.FrequentCodeFragmentBuilder
# gp.tc.0.init.knowledge-directory=/home/mazhar/grid/gdb1.vs5:gen_50/KnowledgeSource/1/
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/FullTreeLog
# gp.tc.0.init.knowledge-extraction=rootsubtree
# percentage of initial population that is created from extracted knowledge
# gp.tc.0.init.transfer-percent=0.50
# gp.tc.0.init.extract-percent=0.50
# gp.tc.0.init.min-cf-depth=2
# gp.tc.0.init.max-cf-depth=5
# ==============================


# ==============================
# The training results
# ==============================
policy-type = gp-evolved
#policy-type = manual

# for manual policies
manual-policies = 1
manual-policies.0 = gphhucarp.decisionprocess.routingpolicy.PathScanning5Policy

# for gp-evolved policies
train-path = /Users/mzhr/MyPhD/SourceCodes/gpucarp/stats/target-wk/
solution-type = simple-solution
fitness-type = simple-fitness
num-trains = 1
generations=50


# ==============================
# KnowledgeableState
# ==============================
# state=gphhucarp.gp.KnowledgeableState
# knowledge-state.change-detction=simple
# knowledge-state.niche-radius=0.5
# knowledge-state.num-instance=8
# knowledge-state.immigrant-percent=0.1
# knowledge-state.knowledge-log-file=./stats/target-wk/KnowledgeState.Log

# ==============================
# KnowledgeableState
# ==============================
# state=tl.gp.PPTEvolutionState
# ppt-state.lr=0.8
# ppt-state.sample-size=100
# ppt-state.tournament-size=20
# ppt-state.knowledge-log-file=PPTEvolutionStateLog
# ppt-state.niche-radius=0.1
# ppt-state.niche-capacity=2


# ==============================
# FullTree
# ==============================
# gp.tc.0.init=tl.gp.SimpleCodeFragmentBuilder
# gp.tc.0.init.knowledge-file=/home/mazhar/grid/gdb1.vs5:gen_50/KnowledgeSource/3/population.gen.49.bin
# gp.tc.0.init.transfer-percent=50
# gp.tc.0.init.knowledge-extraction=root
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/FullTreeLog
# gp.tc.0.init.allow-duplicates=false

# ==============================
# TournamentFullTree
# ==============================
# gp.tc.0.init=tl.gp.TournamentFullTreeBuilder
# gp.tc.0.init.knowledge-file=/home/mazhar/grid/gdb1.vs5:gen_50/KnowledgeSource/3/population.gen.49.bin
# gp.tc.0.init.transfer-percent=0.1
# gp.tc.0.init.knowledge-extraction=root
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/FullTreeLog
# gp.tc.0.init.allow-duplicates=false
# gp.tc.0.init.tournament-size=20


# ==============================
# The Surrogate
# ==============================
# state = gphhucarp.gp.SurrogatedGPHHEState
# pop.subpop.0.species.ind = tl.knowledge.surrogate.SuGPIndividual
# surrogate-state.surr-log-path=./stats/target-wk/
# surrogate-state.surrogate-updpool-policy=CorrEntropy
# surrogate-state.eval-surpool-on-init=true
# gp.tc.0.init=ec.SurrogateBuilder
# gp.tc.0.init.knowledge-file=population.gen.49.bin
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/SurrogateBuilderLog
# gp.tc.0.init.init-surrogate-pool=true
# gp.tc.0.init.transfer-percent=0.2
# surrogate-state.surrogate-average-dup-fitness=true
# surrogate-state.corr-entropy.eps=0.1
# surrogate-state.corr-entropy.min-cluster-size=0
# surrogate-state.knn-distance-metric=corrphenotypic


# ==============================
# The Ensemble Surrogate
# ==============================
# state = gphhucarp.gp.EnsembleSurrogatedGPHHState
# pop.subpop.0.species.ind = tl.knowledge.surrogate.SuGPIndividual
# ensemble-surrogate-state.surr-log-path=./stats/target-wk/
# ensemble-surrogate-state.eval-surpool-on-init=true
# gp.tc.0.init=tl.gp.EnsembleSurrogateBuilder
# gp.tc.0.init.knowledge-file=population.gen.49.bin
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/SurrogateBuilderLog
# gp.tc.0.init.init-surrogate-pool=true
# gp.tc.0.init.transfer-percent=0.2
# ensemble-surrogate-state.surrogate-average-dup-fitness=true
# ensemble-surrogate-state.knn-distance-metric=corrphenotypic


# ==============================
# Cleared FullTree
# ==============================
# state=tl.gphhucarp.dms.DMSSavingGPHHState
# gp.tc.0.init=tl.gp.ClearedFullTreeBuilder
# gp.tc.0.init.knowledge-path=/Users/mzhr/Desktop/
# gp.tc.0.init.transfer-percent=0.5
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/FullTreeLog
# gp.tc.0.init.distance-metric=hamming
# gp.tc.0.init.num-generations=50
# gp.tc.0.init.from-generation=49
# gp.tc.0.init.to-generation=49
# gp.tc.0.init.niche-radius=0

# ==============================
# Surrogate-Evaluated FullTree
# ==============================
# state=tl.gphhucarp.dms.DMSSavingGPHHState
# pop.subpop.0.species.ind=tl.knowledge.surrogate.SuGPIndividual
# gp.tc.0.init=tl.knowledge.surrogate.SurEvalBuilder

# gp.tc.0.init.knowledge-path=./KnowledgeSource/gdb1.vs5-gen_50/3/TestedPopulation
# gp.tc.0.init.transfer-percent=1
# gp.tc.0.init.surr-log-path=./stats/target-wk/SurEvalFullTree/
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/SurEvalFullTree/SurEvalInit
# gp.tc.0.init.from-generation=47
# gp.tc.0.init.to-generation=49
# gp.tc.0.init.knnpool-niche-radius=0
# gp.tc.0.init.knnpool-niche-capacity=1
# gp.tc.0.init.interim-niche-radius=15
# gp.tc.0.init.interim-niche-capacity=1
# gp.tc.0.init.dms-size=30
# gp.tc.0.init.distance-metric=hamming
# gp.tc.0.init.disable-sur-eval=true
# gp.tc.0.init.interim-magnitude=10


# ==============================
# Kknowledge-Enabled Mutation
# ==============================
# state=tl.gphhucarp.dms.DMSSavingGPHHState
# pop.subpop.0.species.pipe.source.1 = tl.gp.KTMutationPipeline
# pop.subpop.0.species.pipe.source.1.from-generation = 49
# pop.subpop.0.species.pipe.source.1.to-generation = 49
# pop.subpop.0.species.pipe.source.1.knowledge-path=./KnowledgeSource/gdb1.vs5-gen_50/3/TestedPopulation
# pop.subpop.0.species.pipe.source.1.knowledge-extraction = all
# pop.subpop.0.species.pipe.source.1.knowledge-log-file=./stats/target-wk/SurEvalFullTree/SurEvalInit
# pop.subpop.0.species.pipe.source.1.extract-percent = 0.1
# pop.subpop.0.species.pipe.source.1.simplify=true
# pop.subpop.0.species.pipe.source.1.prob=0.3
# pop.subpop.0.species.pipe.source.1.niche-radius=0
# pop.subpop.0.species.pipe.source.1.niche-capacity=1
# pop.subpop.0.species.pipe.source.1.distance-metric=hamming
# pop.subpop.0.species.pipe.source.1.dms-size=20
# pop.subpop.0.species.pipe.source.1.clear=true
# pop.subpop.0.species.pipe.source.1.adaptive-mut=true
# pop.subpop.0.species.pipe.source.0.prob=0.65
# pop.subpop.0.species.pipe.source.1.tournament-size=7
# ==============================
# BuggySurrogate-Evaluated FullTree
# ==============================
# gp.tc.0.init=tl.knowledge.surrogate.BuggySurEvalBuilder
# gp.tc.0.init.surr-log-path=./stats/target-wk/BuggySurEvalFullTree/
# gp.tc.0.init.knowledge-log-file=./stats/target-wk/BuggySurEvalFullTree/SurEvalInit
# gp.tc.0.init.niche-radius=7


# ==============================
# Hyper Mutation
# ==============================
# pop.subpop.0.species.pipe=tl.gp.HyperMutationMultiBreedingPipeline
# pop.subpop.0.species.pipe.adapt-rate=0.5
# pop.subpop.0.species.pipe.adapt-strategy=pow
# pop.subpop.0.species.pipe.knowledge-log-file=./stats/target-wk/HyperMutation/SurEvalInit
# pop.subpop.0.species.pipe.min-threshold=0.15
# pop.subpop.0.species.pipe.source.0.prob = 0
# pop.subpop.0.species.pipe.source.1.prob = 0.95

# ==============================
# Normalised Fitness
# ==============================
# eval.problem = tl.gphhucarp.NormalisedReactiveGPHHProblem
# pop.subpop.0.species.fitness = tl.gp.fitness.NormalisedMultiObjectiveFitness

# ==============================
# SSTState
# ==============================
state=tl.knowledge.sst.SSTEvolutionState
state=tl.knowledge.sst.LSHSSTEvolutionState
sst-state.rand-transfer=true
sst-state.distance-metric=hamming
sst-state.enable-transfer=true
sst-state.knowledge-path=./KnowledgeSource/gdb1.vs5-gen_50/3/TestedPopulation
sst-state.transfer-clear-radius=0
sst-state.transfer-clear-capacity=1
sst-state.history-sim-threshold=0
sst-state.dms-size=20
sst-state.knowledge-log-file=./stats/target-wk/SSTState/SSTState
sst-state.pop-log-path=./stats/target-wk/SSTState/pop
sst-state.enable-evo-hist-update=true
pop.subpop.0.species.ind=tl.knowledge.sst.SSTIndividual
# Builder
gp.tc.0.init=tl.knowledge.sst.SSTBuilder
gp.tc.0.init.transfer-percent=0.5
gp.tc.0.init.similarity-thresh=0
gp.tc.0.init.knowledge-log-file=./stats/target-wk/SSTState/Builder
# XOver
pop.subpop.0.species.pipe.source.0=tl.knowledge.sst.SSTCrossoverPipeline
pop.subpop.0.species.pipe.source.0.similarity-thresh=0
pop.subpop.0.species.pipe.source.0.sst-num-tries=10
pop.subpop.0.species.pipe.source.0.knowledge-log-file=./stats/target-wk/SSTState/Crossover
# Mutation
pop.subpop.0.species.pipe.source.1=tl.knowledge.sst.SSTMutation
pop.subpop.0.species.pipe.source.1.prob-accept-seen=0.5
pop.subpop.0.species.pipe.source.1.similarity-thresh=0
pop.subpop.0.species.pipe.source.1.sst-num-tries=10
pop.subpop.0.species.pipe.source.1.knowledge-log-file=./stats/target-wk/SSTState/Mutation
# ==============================

# state = tl.gp.PPTEvolutionState
# ppt-state.lr=0.8
# ppt-state.sample-size=100
# ppt-state.tournament-size=20
# ppt-state.ppt-stat-log=PPTStatLog
# ppt-state.ppt-log=PPTLog

# ==============================
# The test set
# ==============================
eval = ec.simple.SimpleEvaluator
eval.problem.pool-filter = gphhucarp.decisionprocess.poolfilter.ExpFeasiblePoolFilter
eval.problem.tie-breaker = gphhucarp.decisionprocess.tiebreaker.SimpleTieBreaker
eval.problem.data = gputils.DoubleData
# eval.problem.eval-model = gphhucarp.gp.evaluation.ReactiveEvaluationModel
eval.problem.eval-model.objectives = 1
eval.problem.eval-model.objectives.0 = total-cost
eval.problem.eval-model.instances = 1
eval.problem.eval-model.instances.0.file = gdb/gdb1.dat
eval.problem.eval-model.instances.0.samples = 5
eval.problem.eval-model.instances.0.vehicles = 4
eval.problem.eval-model.instances.0.demand-uncertainty-level = 0.2
eval.problem.eval-model.instances.0.cost-uncertainty-level = 0.2
eval.problem.eval-model.seed = 25234



